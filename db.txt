CREATE TABLE authors (
    author_id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(255) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE categories (
    id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(100) UNIQUE NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE resources (
    id INT PRIMARY KEY AUTO_INCREMENT,
    title VARCHAR(255) NOT NULL,
    doi VARCHAR(255) UNIQUE,
    publication_date DATE,  -- Use DATE for publication_date
    abstract TEXT,
    type ENUM('Thesis', 'Journal', 'Book', 'Article', 'Report', 'Other'),
    language ENUM('English', 'Arabic', 'Somali'),
    paid ENUM('free', 'premium'),
    status ENUM('published', 'unpublished') DEFAULT 'unpublished',
    file_url VARCHAR(255) NOT NULL,
    file_public_id VARCHAR(255) AFTER file_url;
    category_id INT NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (category_id) REFERENCES categories(id)
);

CREATE TABLE resource_authors (
    resource_id INT NOT NULL,
    author_id INT NOT NULL,
    PRIMARY KEY (resource_id, author_id),
    FOREIGN KEY (resource_id) REFERENCES resources(id) ON DELETE CASCADE,
    FOREIGN KEY (author_id) REFERENCES authors(author_id) ON DELETE CASCADE
);

CREATE TABLE institutions (
    institution_id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(255) UNIQUE NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    password TEXT NOT NULL,
    sub_status ENUM('none', 'active', 'expired') DEFAULT 'none',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE users (
    user_id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(255) NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    password TEXT NOT NULL,
    role ENUM('user', 'student') NOT NULL,
    institution_id INT NULL,
    sub_status ENUM('none', 'active', 'expired') DEFAULT 'none',
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (institution_id) REFERENCES institutions(institution_id) ON DELETE RESTRICT
);

CREATE TABLE admins (
    admin_id INT PRIMARY KEY AUTO_INCREMENT,
    fullname VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE NOT NULL,
    password TEXT NOT NULL,
    role ENUM('admin', 'staff') NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE subscriptions (
    subscription_id INT PRIMARY KEY AUTO_INCREMENT,
    name VARCHAR(100), -- Monthly, Yearly
    type ENUM('user', 'institution'), 
    price DECIMAL(10,2) NOT NULL, -- $5 for Users, $40 for Institutions
    duration_days INT NOT NULL, -- 30 Days, 365 Days
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

CREATE TABLE user_subscriptions (
    user_sub_id INT PRIMARY KEY AUTO_INCREMENT,
    user_id INT NULL,
    institution_id INT NULL,
    subscription_id INT,
    price DECIMAL(10,2),
    start_date DATE DEFAULT CURRENT_DATE,  -- Use DATE for start_date
    expiry_date DATE DEFAULT NULL,         -- Use DATE for expiry_date
    payment_method ENUM('api', 'manual'),
    status ENUM('pending', 'active', 'expired') DEFAULT 'pending',
    confirmed_by INT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE,
    FOREIGN KEY (institution_id) REFERENCES institutions(institution_id) ON DELETE CASCADE,
    FOREIGN KEY (subscription_id) REFERENCES subscriptions(subscription_id),
    FOREIGN KEY (confirmed_by) REFERENCES admins(admin_id) ON DELETE SET NULL
);

CREATE TABLE refresh_tokens (
    token_id INT PRIMARY KEY AUTO_INCREMENT,
    user_id INT NULL,
    admin_id INT NULL,
    institution_id INT NULL,
    refresh_token TEXT NOT NULL,
    expires_at TIMESTAMP NOT NULL,  -- Keep as TIMESTAMP for precise expiration time
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE,
    FOREIGN KEY (admin_id) REFERENCES admins(admin_id) ON DELETE CASCADE,
    FOREIGN KEY (institution_id) REFERENCES institutions(institution_id) ON DELETE CASCADE
);

CREATE INDEX idx_resources_title ON resources(title);
CREATE INDEX idx_resources_publication_date ON resources(publication_date);
CREATE INDEX idx_authors_name ON authors(name);
CREATE INDEX idx_resource_authors_resource_id ON resource_authors(resource_id);
-- Create the downloads table
CREATE TABLE downloads (
    download_id INT PRIMARY KEY AUTO_INCREMENT,
    user_id INT NOT NULL,
    resource_id INT NOT NULL,
    downloaded_at TIMESTAMP NOT NULL,
    FOREIGN KEY (user_id) REFERENCES users(user_id) ON DELETE CASCADE,
    FOREIGN KEY (resource_id) REFERENCES resources(id) ON DELETE CASCADE
);


